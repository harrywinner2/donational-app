section.section
  .container.has-text-centered
      h1.title Partner Account

.is-sticky
  .tabs.is-centered
    ul
      li.is-active: a
        = icon_tag('fa-user')
        | Basic Information
      li = link_to partner_managed_portfolios_path(@view_model.partner) do
        = icon_tag('fa-address-book')
        | Portfolios
      li = link_to partner_campaigns_path(@view_model.partner) do
        = icon_tag('fa-globe')
        | Campaigns
      li = link_to partner_reports_path(@view_model.partner) do
        = icon_tag('fa-folder')
        | Reports

section.embossed.section
  .container
    = display_flash_messages
    .box.flat-card style='background: #fafafa'
      = form_with model: @view_model.partner, url: @view_model.partner_path, local: true, method: :put, class: 'form' do |f|
        .columns.is-vcentered
          .column.has-text-centered
            p: span.far.fa-address-book.fa-2x
            h3.subtitle.is-spaced Basic Information
          .column style='background: #fff;'
            .form
              .columns
                .column
                  .field
                    label.control
                      = f.label :name, class: :label
                      = f.text_field :name, class: :input, value: @view_model.partner.name
                .column
                  .field
                    label.control
                      = f.label :website_url, class: :label
                      = f.text_field :website_url, class: :input, value: @view_model.partner.website_url
              = render 'shared/image_upload_field',
                  attachment: @view_model.partner.logo,
                  field: :logo,
                  thumbnail_preview_size: '400x200',
                  form: f
              .field
                label.control
                  = f.label :description, class: :label
                  = f.text_area :description, class: :input, value: @view_model.partner.description
              br
              .columns
                .column
                  p.has-text-left
                  = link_to "Connect with Stripe", @view_model.stripe_connect_url, class: %w(button is-primary)
                .column.has-text-right
                  p.has-text-rigth
                  = f.submit "Save", class: %w(button is-primary)

section.section
  .container
    p.subtitle.is-spaced.has-text-centered
      ' Donor Questions
      .box
        table.table.is-hoverable.is-fullwidth.has-cells-centered data-behavior="accordion"
          tr
            td
              p
                strong>
                  | Name
            td
              p
                strong>
                  | Title
            td
              p
                strong>
                  | Type
            td
              p
                strong>
                  | Options
            td
              p
                strong>
                  | Required
            td colspan=2
              p
                strong>
                  | Actions
          - @view_model.partner.donor_questions.each do |question|
            tr
              td
                p
                  = question.name
              td
                p
                  = question.title
              td
                p
                  = question.type
              td
                p
                  - if question.type == 'select'
                    = question.options.join(', ')
                  - else
                    = question.options
              td
                p
                  = question.required
              td
                p
                  = link_to 'Edit', 'javascript:;', class: 'btn-edit', onClick: "fillForm('#{question.name}', '#{question.title}', '#{question.type}', '#{question.options}', '#{question.required}');"
              td
                p
                  = link_to 'Delete', partner_path(question: question.name), method: :put, data: { confirm: 'Are you sure you want to delete the question?' }

    .box.flat-card style='background: #fafafa'
      = form_with url: @view_model.partner_path, local: true, method: :put, class: 'form' do |f|
        .form
          .columns
            .column
              .field
                label.control
                  = f.label :name, class: :label
                  = f.text_field :name, id: 'input-name', class: :input, placeholder: 'i.e. school'
            .column
              .field
                label.control
                  = f.label :title, class: :label
                  = f.text_field :title, id: 'input-title', class: :input, placeholder: 'i.e. What organization/school are you affiliated with?'
          .columns
            .column
              label.control
                = f.label :type, class: :label
                .select.control = f.select :type, ['Text', 'Select'], { }, { id: 'input-type', class: :input }
            .column
              label.control
                = f.label :required, class: :label
                .select.control = f.select :required, [['Yes', true], ['No', false]], { }, { id: 'input-required', class: :input }
          .field
            label.control
              = f.label :options, class: :label
              = f.text_field :options, id: 'input-options', class: :input, placeholder: 'i.e. Harvard, Wharton, Other'
              span.help
                | This field is required only if type is Select. Please enter values separated by comma.
          p.has-text-right
            = f.submit "Add question", class: %w(button is-primary)

javascript:
  function fillForm(name, title, type, options, required) {
    document.getElementById('input-name').value = name;
    document.getElementById('input-title').value = title;
    document.getElementById('input-type').value = type.charAt(0).toUpperCase() + type.slice(1);
    document.getElementById('input-options').value = options.replace('[', '').replace(']', '').replace(/"/g, '');
    document.getElementById('input-required').value = required;
  }
