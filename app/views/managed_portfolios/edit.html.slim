section.section
  .container.has-text-centered
      h1.title Edit Portfolio

.is-sticky
  .tabs.is-centered
    ul
      li = link_to edit_partner_path(@view_model.partner) do
        = icon_tag('fa-user')
        | Basic Information
      li.is-active = link_to partner_managed_portfolios_path(@view_model.partner) do
        = icon_tag('fa-address-book')
        | Portfolios
      li = link_to partner_campaigns_path(@view_model.partner) do
        = icon_tag('fa-globe')
        | Campaigns
      li = link_to partner_reports_path(@view_model.partner) do
        = icon_tag('fa-folder')
        | Reports
      li. = link_to partner_donors_path(@view_model.partner) do
        = icon_tag('fa-user')
        | Donors

section.embossed.section
  .container data-controller='autocomplete'
    = display_flash_messages
    = form_with url: @view_model.managed_portfolio_path, local: true, method: :put, class: 'form' do |f|
      .box style='background: #fafafa'
        = f.hidden_field :charities, id: 'charities'
        .columns.is-vcentered
          .column.has-text-centered
            p: span.far.fa-address-book.fa-2x
            h3 Portfolio Details
          .column style='background: #fff;'
            .form
              .field
                label.control
                  = f.label :title, class: :label
                  = f.text_field :title, class: :input, value: @view_model.managed_portfolio.name
              .field
                label.control
                  = f.label :description, class: :label
                  = f.text_area :description, class: :input, value: @view_model.managed_portfolio.description
              = render 'shared/image_upload_field',
                  attachment: @view_model.managed_portfolio.image,
                  field: :image,
                  thumbnail_preview_size: '400x200',
                  form: f
              .field
                label.control
                  = f.label :featured, class: :label do
                    => f.check_box :featured, checked: @view_model.managed_portfolio.featured?
                    | Feature this portfolio
              .field
                label.control
                  = f.label :archived, class: :label do
                    => f.check_box :archived, checked: @view_model.managed_portfolio.archived?
                    | Archive this portfolio
      .box style='background: #fafafa'
        .columns.is-vcentered
          .column.has-text-centered
            p: span.fa.fa-list.fa-2x
            h3 Organizations
          .column style="background: #fff"
            .field
              label.control
                table.table.is-hoverable.is-fullwidth.has-cells-centered data-behavior="accordion" id="charities-table"
                  - Allocation.active(portfolio: @view_model.managed_portfolio.portfolio).each do |allocation|
                    tr
                      td
                        = allocation.organization_name
                      td
                        span.tag.is-light = allocation.organization_ein
                      td
                        = link_to 'Remove', 'javascript:;', onClick: "removeCharity(this);", class: 'button is-success is-small is-outlined'
      .box style='background: #fafafa'
        .columns.is-vcentered
          .column.has-text-centered
            p: span.fa.fa-search-plus.fa-2x
            h3 Add to Portfolio
          .column style="background: #fff"
            = f.label :add_one_of_our_recommended_charities, class: :label
            .field.has-addons
              .control.is-expanded
                .select.is-fullwidth = f.select :charity, Organizations::GetRecommendedOrganizations.call.collect { |o| [o.name, o.ein] }, { include_blank: true, class: :input }, id: 'select-charity'
              .control
                = link_to 'Add', 'javascript:;', class:  %w(button is-success is-outlined), onClick: "addSelectedCharity();"

            label.control
              = f.label :search_for_a_charity, class: :label
              p.help You can add any 501(c)3 recognized organization to your portfolio
              input class='input' data-target='autocomplete.query' data-action='keyup->autocomplete#search' data-autocomplete-url=searchable_organizations_path data-autocomplete-from='portfolios'
            label.control

            #results class="results" data-target='autocomplete.results'
      p.has-text-centered
        = f.submit "Save", class: %w(button is-primary), onClick: "save();"


javascript:
  function addSelectedCharity() {
    var charity = document.getElementById("select-charity");
    addCharity(charity.options[charity.selectedIndex].innerHTML, charity.value);
  }

  function addCharity(name, ein) {
    var table = document.getElementById("charities-table");
    var row = table.insertRow(table.getElementsByTagName("tr").length);
    var cellName = row.insertCell(0);
    var cellEIN = row.insertCell(1);
    var cellRemove = row.insertCell(2);

    cellName.innerHTML = name;
    cellEIN.innerHTML = "<span class='tag is-light'>" + ein + "</span>";
    cellRemove.innerHTML = "<a class='button is-success is-small is-outlined'>Remove</a>";
    cellRemove.addEventListener("click", function() { removeCharity(this); });
  }

  function removeCharity(el) {
    el.closest('tr').remove();
  }

  function save() {
    var charities = "";
    var table = document.getElementById("charities-table");
    for (var i = 0; i < table.rows.length; i++) {
      if (table.rows[i].cells.length) {
        charities += table.rows[i].cells[0].textContent.trim() + ",";
        charities += table.rows[i].cells[1].textContent.trim() + ";";
      }
    }
    document.getElementById('charities').value = charities;
    document.getElementById('form').submit();
  }
