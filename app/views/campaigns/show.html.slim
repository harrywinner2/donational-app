
section.section
  .container
    .content.has-text-centered
      h1.title
        ' Donate with
        = @view_model.partner_name
      h3.subtitle = @view_model.campaign_title
      p = @view_model.partner_description
section.section.embossed
  .container.content
    .message.is-info
      .message-body
        = markdown_to_html @view_model.campaign_description
    = display_flash_messages
    .card
      .card-content
        = form_with model: @view_model.new_campaign_contribution, local: true, id: 'sanitized_form', method: :post, class: 'form' do |f|
          = f.hidden_field :payment_token, id: 'payment_token'
          = f.hidden_field :name_on_card, id: 'name_on_card'
          = f.hidden_field :last4, id: 'last4'
          label.label Donation
          .field
            .control.buttons = f.collection_radio_buttons :amount_dollars,\
              @view_model.default_contribution_amounts.map { |amt| [amt, number_to_currency(amt, precision: 0)] }, :first, :last do |b| \
                b.radio_button(class: 'is-hidden') + b.label(class: 'is-medium button') \
              end
          .field.is-grouped.is-grouped-multiline
            .control
              .select = f.collection_select(:frequency, RecurringContribution.frequency.options, :last, :first)
            .field.is-grouped data-accordion-panel-for="hide-when-show-date-is-triggered"
              .control
                span.input.is-static starting
              .control
                a.button.is-text data-accordion-trigger="show-date"
                  = icon_tag('fas fa-calendar')
                  span today
            .field.is-grouped.is-hidden data-accordion-panel-for="show-date"
              .control
                span.input.is-static starting on
              .control.has-icons-left
                  = icon_tag('fas fa-calendar')
                  = f.date_field :start_at, class: :input
          hr
          .field.is-grouped
            .control.is-expanded
              label.label First name
              .control.has-icons-left
                = icon_tag('fas fa-user')
                = f.text_field :first_name, class: :input
            .control.is-expanded
              label.label Last name
              = f.text_field :last_name, class: :input
          .field.is-grouped
            .control.is-expanded
              label.label Email
              .control.has-icons-left
                = icon_tag('fas fa-envelope')
                = f.email_field :email, class: :input
          hr
          = f.fields_for :donor_questions do |questions_form|
            = render @view_model.donor_questions, form: questions_form
          .field
            = f.label :managed_portfolio_id, class: :label, value: 'Portfolio'
            .field.is-grouped.is-grouped-centered.is-grouped-multiline
              - @view_model.managed_portfolios.each do |mp|
                .control.has-text-centered
                  label.box for="portfolio-#{mp.id}"
                    span.icon
                      = f.radio_button :managed_portfolio_id, mp.id, id: "portfolio-#{mp.id}"
                    .label = mp.name
                    = pluralize(mp.size, 'charity')
          hr
        / This form should remain separate from the credit card details to avoid
        / accidentally leaking credit card data into our server
        form#panda_cc_form.panda_cc_form.form
          .field
            label.label Enter Credit Card details:
            .field.is-grouped
              .control.is-expanded.has-icons-left
                input.input type="text" data-panda="credit_card" placeholder="Card Number"
                span.icon.is-left.is-small: i.fa.fa-credit-card
              .control
                .select
                  select data-panda="month" name='month'
                    option selected=true disabled=true mm
                    - (1..12).each do |i|
                      option value=i
                        = i
              .control
                .select
                  select data-panda="year" name='year'
                    option selected=true disabled=true yyyy
                    - (Time.zone.now.year..2030).each do |i|
                      option value=i
                        = i
            .field.is-grouped
              p.control.is-expanded.has-icons-left
                input.input type="text" data-panda="first_name" placeholder="First name"
                span.icon.is-left.is-small: i.fa.fa-user
              p.control.is-expanded
                input.input type="text" data-panda="last_name" placeholder="Last name"
              p.control.has-icons-left
                input.input type="text" data-panda="cvv" placeholder="CVV" size=4
                span.icon.is-left.is-small: i.fa.fa-lock
              .card-wrapper.is-hidden
            hr
            .field.has-text-right
              button.button.is-primary.is-large.is-expanded type="submit" Donate

    p.has-text-centered.help
      | We use smart and secure online payments to ensure that your donations are simple, secure, and avoid fees.
    p.has-text-centered.help
      | All donations are tax-deductible operating under the Social Good Fund, a 501(c)3 public charity, EIN 46-1323531.

  javascript:
    new Card({
      form: '#panda_cc_form',
      container: '.card-wrapper',
      formSelectors: {
        nameInput: 'input[data-panda="first_name"], input[data-panda="last_name"]',
        numberInput: 'input[data-panda="credit_card"]',
        expiryInput: 'input[data-panda="month"], input[data-panda="year"]',
        cvcInput: 'input[data-panda="cvv"]'
      }
  	});
  	Panda.init("#{ENV.fetch('PANDAPAY_PUBLIC_KEY')}", 'panda_cc_form');
    Panda.on('success', function(cardToken) {
      document.getElementById('payment_token').value = cardToken;
      document.getElementById('name_on_card').value = $('input[data-panda="first_name"]').val() + ' ' + $('input[data-panda="last_name"]').val();
      document.getElementById('last4').value = $('input[data-panda="credit_card"]').val().slice(-4);
      document.getElementById('sanitized_form').submit();
    });
    document.addEventListener('DOMContentLoaded', function () {
      var datePickers = bulmaCalendar.attach('[type="date"]', {
        overlay: true,
        minDate: '#{Date.today.iso8601}',
        maxDate: '#{1.year.from_now.to_date.iso8601}'
      });
    });
